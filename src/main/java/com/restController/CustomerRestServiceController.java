package com.restController;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.jpa.entity.Customer;
import com.jpa.repository.CustomerRepository;
//import hello.Order;
//import hello.OrderRepository;

//@Controller    // This means that this class is a Controller
//@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
@RestController
public class CustomerRestServiceController {
	@Autowired // This means to get the bean called customerRepository, Which is auto-generated by Spring, we will use it to handle the data
	private CustomerRepository customerRepository;
	

	//@GetMapping(path="/all")
	//@CrossOrigin(origins="http://localhost:4020")  -- replace this local setting with global setting
	@RequestMapping("/customer/all")
	public @ResponseBody Iterable<Customer> getAllCustomers() {
		// This returns a JSON or XML with the users
		return customerRepository.findAll();
	}
	
	//@GetMapping(path="/add") // Map ONLY GET Requests
	@PostMapping("/customer/post")
	public @ResponseBody String addNewCustomer (@RequestParam Integer id, String name) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		Customer c = new Customer();
		c.setId(id);
		c.setName(name);
		customerRepository.save(c);
		return "New Customer Saved";
	}

}
